{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Cookies","require","App","user","get","useState","projects","setProjects","useEffect","a","fetch","url","headers","method","response","json","map","e","className","onClick","window","location","_id","style","backgroundImage","name","Navbar","bg","variant","position","Nav","Brand","undefined","Button","remove","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAAe,I,4CCKTA,EAAUC,EAAQ,IA4CTC,MA1Cf,WACI,IAAMC,EAAOH,EAAQI,IAAI,SADd,EAEqBC,mBAAS,IAF9B,mBAEJC,EAFI,KAEMC,EAFN,KAqBX,OAhBAC,oBAAS,sBAAC,8BAAAC,EAAA,sEACWC,MAAMC,6CAA+BR,EAAM,CAC5DS,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,OAAQ,QANF,cACNC,EADM,gBAQSA,EAASC,OARlB,OAQJA,EARI,OASRR,EAAYQ,EAAKC,KAAI,SAAAC,GAAI,OAAO,sBAAKC,UAAU,UAAUC,QAAS,WAChEC,OAAOC,SAAW,eAAiBJ,EAAEK,KADP,UAI9B,sBAAMJ,UAAU,cAAcK,MAAO,CAACC,gBAAiB,sBACvD,sBAAMN,UAAU,eAAhB,SAAgCD,EAAEQ,cAd5B,2CAeR,IACM,qCACR,cAACC,EAAA,EAAD,CAAQR,UAAU,SAASS,GAAG,QAAQC,QAAQ,QAAQL,MAAO,CAACM,SAAU,QAAS,UAAW,KAA5F,SACE,eAACC,EAAA,EAAD,CAAKZ,UAAU,UAAf,UACE,cAACQ,EAAA,EAAOK,MAAR,qBACA,oBAAGR,WAAeS,GAAR7B,EAAoB,CAAC,QAAU,QAAQ,CAAC,SAAW,OAAO,QAAU,QAAQ,SAAW,WAAW,MAAQ,OAApH,0BAA0IA,EAA1I,QACA,cAAC8B,EAAA,EAAD,CAAQV,WAAeS,GAAR7B,EAAoB,CAAC,QAAU,QAAQ,SAAW,WAAW,MAAQ,MAAM,CAAC,QAAU,QAASgB,QAAS,WAAKC,OAAOC,SAAW,YAA9I,mBACA,cAACY,EAAA,EAAD,CAAQV,WAAeS,GAAR7B,EAAoB,CAAC,QAAU,QAAQ,CAAC,QAAU,QAAQ,gBAAkB,UAAU,SAAW,WAAW,MAAQ,MAAOgB,QAAS,WAAKnB,EAAQkC,OAAO,SAAUd,OAAOC,SAASc,UAAjM,yBAGJ,sBAAKjB,UAAU,MAAf,UACE,oCACA,sBAAKA,UAAU,UAAUC,QAAS,WAChCC,OAAOC,SAAW,KADpB,UAGC,sBAAMH,UAAU,cAAcK,MAAO,CAACC,gBAAiB,sBACtD,sBAAMN,UAAU,eAAhB,mCACDZ,SChCQ8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b3de2a51.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport {Navbar,Nav, Button} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst Cookies = require('js-cookie');\n\nfunction App() {\n    const user = Cookies.get(\"login\");\n    const [projects, setProjects] = useState([]);    \n    const url = \"http://localhost:9000/\";\n\n    useEffect(async ()=>{\n    let response = await fetch(url + \"projectAPI/getNames/\" + user, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'GET'\n      });\n      let json = await response.json();\n      setProjects(json.map(e=>{return <div className=\"project\" onClick={()=>{\n        window.location = \"/?projectid=\" + e._id;\n      }}\n      >\n        <span className=\"projectBody\" style={{backgroundImage: \"url(/folder.jpg)\"}}></span>\n        <span className=\"projectTitle\">{e.name}</span></div>;}));\n    },[]);\n    return (<>\n    <Navbar className=\"navbar\" bg=\"light\" variant=\"light\" style={{position: 'fixed', 'z-index': '4'}}>\n      <Nav className=\"mr-auto\">\n        <Navbar.Brand>Geant4</Navbar.Brand>\n        <p style={user == undefined ? {\"display\":\"none\"}:{\"fontSize\":\"20px\",\"display\":\"block\",\"position\":\"absolute\",\"right\":\"10%\"}}>Logged in as {user}! </p>\n        <Button style={user == undefined ? {\"display\":\"block\",\"position\":\"absolute\",\"right\":\"2%\"}:{\"display\":\"none\"}} onClick={()=>{window.location = \"../Login\"}}>Login</Button>\n        <Button style={user == undefined ? {\"display\":\"none\"}:{\"display\":\"block\",\"backgroundColor\":\"#ff0000\",\"position\":\"absolute\",\"right\":\"2%\"}} onClick={()=>{Cookies.remove(\"login\"); window.location.reload()}}>Logout</Button>\n        </Nav>\n      </Navbar>\n    <div className=\"App\">\n      <p>asd</p>\n      <div className=\"project\" onClick={()=>{\n        window.location = \"/\";\n      }}\n      ><span className=\"projectBody\" style={{backgroundImage: \"url(/create.jpg)\"}}></span>\n        <span className=\"projectTitle\">Create New Project</span></div>\n      {projects}\n    </div>\n    </>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}