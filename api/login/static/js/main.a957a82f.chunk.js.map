{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","page","setPage","username","setUsername","password","setPassword","nameError","setNameError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","url","validateUsername","validatePassword","length","login","validate","fetch","headers","method","body","JSON","stringify","name","then","response","text","window","sessionStorage","setItem","location","undefined","getItem","className","style","type","required","value","onChange","e","target","onBlur","maxLength","onKeyPress","key","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAiMeA,MA3Lf,WACE,MAAwBC,mBAAS,SAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA0BN,mBAAS,IAAnC,mBAEA,GAFA,UAEkCA,mBAAS,KAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAA0CR,mBAAS,IAAnD,mBAAOS,EAAP,KAAsBC,EAAtB,KACA,EAAoCV,mBAAS,IAA7C,mBACA,GADA,UACkDA,mBAAS,KAA3D,mBACA,GADA,UACwDA,mBAAS,KAAjE,mBAAOW,EAAP,KAA6BC,EAA7B,KAEMC,EAAM,yBAERC,EAAmB,WACrB,MAAe,IAAZX,GACDK,EAAa,mBACN,IAEPA,EAAa,KACN,IAcPO,EAAmB,WACrB,MAAe,IAAZV,GACDK,EAAiB,mBACV,GACAL,EAASW,OAAS,GACzBN,EAAiB,+CACV,IAEPA,EAAiB,KACV,IAGPO,EAAQ,WACNC,KAGJC,MAAMN,EAAM,gBAAiB,CAC3BO,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,KAAMtB,EAAUE,SAAUA,MAEhDqB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAEY,qBAAbA,GAAgD,mBAAbA,GAEpCE,OAAOC,eAAeC,QAAQ,OAAQJ,GACtCE,OAAOC,eAAeC,QAAQ,OAAQ5B,GACtC0B,OAAOG,SAAW,KAElBtB,EAAiBiB,OAIrBT,EAAW,WACb,OAAOJ,KAAsBC,KAE/B,YAA4CkB,GAAzCJ,OAAOC,eAAeI,QAAQ,QAEvB,6DAIE,UAATjC,EACO,qCAAE,qBAAKkC,UAAU,SACzB,sBAAKA,UAAU,SAAf,UACE,uCACA,uBAAMd,OAAO,OAAb,UACE,sBAAKc,UAAU,aAAaC,MAAoB,IAAb7B,EAAkB,CAAC,aAAgB,qBAAsB,GAA5F,UACE,uBAAO8B,KAAK,OAAOC,UAAQ,EAACC,MAAOpC,EAAUqC,SAAU,SAAAC,GAAIrC,EAAYqC,EAAEC,OAAOH,QAAUI,OAAQ,WAAK7B,KAAsB8B,UAAU,OAEvI,yBACA,gDAEF,qBAAKT,UAAU,QAAf,SAAwB5B,IACxB,sBAAK4B,UAAU,aAAaC,MAAwB,IAAjB3B,EAAsB,CAAC,aAAgB,qBAAsB,GAAhG,UACE,uBAAO4B,KAAK,WAAWQ,WAAY,SAAAJ,GACrB,SAATA,EAAEK,KAAe7B,KACpBqB,UAAQ,EAACC,MAAOlC,EAAUmC,SAAU,SAAAC,GAAInC,EAAYmC,EAAEC,OAAOH,QAAUI,OAAQ,WAAK5B,KAAsB6B,UAAU,OAEtH,yBACA,gDAEF,qBAAKT,UAAU,QAAf,SAAwB1B,IACxB,qBAAK0B,UAAU,OAAf,8BACA,uBAAOE,KAAK,SAASE,MAAM,QAAQQ,QAAS,WAC1C9B,OAEF,sBAAKkB,UAAU,cAAf,oCACyB,qBAAKA,UAAU,gBAAgBY,QAAS,WAAK7C,EAAQ,aAArD,kCAMrB,qBAAKiC,UAAU,OAAf,SACR,sBAAKA,UAAU,SAAf,UACE,0CACA,uBAAMd,OAAO,OAAb,UACA,sBAAKc,UAAU,aAAaC,MAAoB,IAAb7B,EAAkB,CAAC,aAAgB,qBAAsB,GAA5F,UACI,uBAAO8B,KAAK,OAAOC,UAAQ,EAACC,MAAOpC,EAAUqC,SAAU,SAAAC,GAAIrC,EAAYqC,EAAEC,OAAOH,QAAUI,OAAQ,WAAK7B,KAAsB8B,UAAU,OAEvI,yBACA,gDAEF,qBAAKT,UAAU,QAAf,SAAwB5B,IAoBxB,sBAAK4B,UAAU,aAAaC,MAAwB,IAAjB3B,EAAsB,CAAC,aAAgB,qBAAsB,GAAhG,UACE,uBAAO4B,KAAK,WAAWC,UAAQ,EAACC,MAAOlC,EAAUmC,SAAU,SAAAC,GAAInC,EAAYmC,EAAEC,OAAOH,QAAUI,OAAQ,WAAK5B,KAAsB6B,UAAU,OAE3I,yBACA,gDAEF,qBAAKT,UAAU,QAAf,SAAwB1B,IACxB,sBAAK0B,UAAU,aAAaC,MAA+B,IAAxBzB,EAA6B,CAAC,aAAgB,qBAAsB,GAAvG,UACE,uBAAO0B,KAAK,WAAWC,UAAQ,EAACK,OAAQ,SAAAF,GACnCA,EAAEC,OAAOH,OAASlC,EACpBO,EAAwB,mDAEzBA,EAAwB,OAG1B,yBACA,wDAEF,qBAAKuB,UAAU,QAAf,SAAwBxB,IACxB,qBAAKwB,UAAU,OAAf,8BACA,uBAAOE,KAAK,SAASE,MAAM,WAAWQ,QAAS,WAC1C7B,GAAUC,MAAMN,EAAM,mBAAoB,CAC3CO,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,KAAMtB,EAAUE,SAAUA,MAEhDqB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACY,mBAAbA,IAA+BE,OAAOG,SAAW,oBAI1D,sBAAKG,UAAU,cAAf,sCAC2B,qBAAKA,UAAU,gBAAgBY,QAAS,WAAK7C,EAAQ,UAArD,+BC5KpB8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.a957a82f.chunk.js","sourcesContent":["import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, {useState} from 'react';\r\n\r\n// const Cookies = require(\"js-cookie\");\r\n\r\nfunction App() {\r\n  const [page, setPage] = useState(\"login\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const [nameError, setNameError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [confirmEmailError, setConfirmEmailError] = useState(\"\");\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\r\n\r\n  const url = \"http://localhost:9000/\";\r\n\r\n  let validateUsername = ()=>{\r\n    if(username == \"\"){\r\n      setNameError(\"Enter username\");\r\n      return false;\r\n    }else{\r\n      setNameError(\"\");\r\n      return true;\r\n    }\r\n  }\r\n\r\n  let validateEmail = ()=>{\r\n    if(email == \"\" || !email.includes('@')){\r\n      setEmailError(\"Enter a valid email.\");\r\n      return false;\r\n    }else{\r\n      setEmailError(\"\");\r\n      return true;\r\n    }\r\n  }\r\n\r\n  let validatePassword = ()=>{\r\n    if(password == \"\"){\r\n      setPasswordError(\"Enter password\");\r\n      return false;\r\n    }else if(password.length < 8){\r\n      setPasswordError(\"Password needs to be at least 8 characters\");\r\n      return false;\r\n    }else{\r\n      setPasswordError(\"\");\r\n      return true;\r\n    }\r\n  }\r\n  let login = ()=>{\r\n    if(!validate()) {\r\n      return;\r\n    }\r\n    fetch(url + 'userAPI/login', {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify({ name: username, password: password })\r\n    })\r\n      .then(response => response.text())\r\n      .then(response => {\r\n\r\n        if(response !== \"Failed to login!\" && response !== 'User not found'){\r\n          //Cookies.set('login', username, { expires: 1 });\r\n          window.sessionStorage.setItem('auth', response);\r\n          window.sessionStorage.setItem('user', username);\r\n          window.location = \"/\";\r\n        } else{\r\n          setPasswordError(response);\r\n        } \r\n      });\r\n  }\r\n  let validate = ()=>{\r\n    return validateUsername() || validatePassword();\r\n  }\r\n  if(window.sessionStorage.getItem('auth') != undefined){\r\n\r\n    return (<div>\r\n      You are already signed in!\r\n    </div>)\r\n  }\r\n  if(page === 'login'){\r\n    return (<><div className=\"body\"></div>\r\n    <div className=\"center\">\r\n      <h1>Login</h1>\r\n      <form method=\"post\">\r\n        <div className=\"text_field\" style={nameError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\r\n          <input type=\"text\" required value={username} onChange={e=>{setUsername(e.target.value);}} onBlur={()=>{validateUsername();}} maxLength=\"12\">\r\n          </input>\r\n          <span></span>\r\n          <label>Username</label>\r\n        </div>\r\n        <div className=\"error\">{nameError}</div>\r\n        <div className=\"text_field\" style={passwordError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\r\n          <input type=\"password\" onKeyPress={e=>{\r\n            if(e.key == 'Enter')login();\r\n          }}required value={password} onChange={e=>{setPassword(e.target.value);}} onBlur={()=>{validatePassword();}} maxLength=\"16\">\r\n          </input>\r\n          <span></span>\r\n          <label>Password</label>\r\n        </div>\r\n        <div className=\"error\">{passwordError}</div>\r\n        <div className=\"pass\">Forgot password?</div>\r\n        <input type=\"button\" value=\"Login\" onClick={()=>{\r\n          login();\r\n        }}></input>\r\n        <div className=\"signup_link\">\r\n          Don't have an account? <div className=\"register_link\" onClick={()=>{setPage(\"register\")}}>Register</div>\r\n        </div>\r\n      </form>\r\n    </div></>\r\n  );\r\n  }else{\r\n    return (<div className=\"body\">\r\n    <div className=\"center\">\r\n      <h1>Register</h1>\r\n      <form method=\"post\">\r\n      <div className=\"text_field\" style={nameError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\r\n          <input type=\"text\" required value={username} onChange={e=>{setUsername(e.target.value);}} onBlur={()=>{validateUsername();}} maxLength=\"12\">\r\n          </input>\r\n          <span></span>\r\n          <label>Username</label>\r\n        </div>\r\n        <div className=\"error\">{nameError}</div>\r\n        {/* <div className=\"text_field\" style={emailError != \"\" ? {\"borderBottom\":\"2px solid #ff0000\"}:{}}>\r\n          <input type=\"text\" required value={email} onChange={e=>{setEmail(e.target.value);}} onBlur={()=>{validateEmail();}} maxLength=\"20\">\r\n          </input>\r\n          <span></span>\r\n          <label>e-mail</label>\r\n        </div>\r\n        <div className=\"error\">{emailError}</div>\r\n        <div className=\"text_field\" style={confirmEmailError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\r\n          <input type=\"text\" required onBlur={e=>{\r\n            if(e.target.value != email){\r\n             setConfirmEmailError(\"confirm email has to be the same as email\");\r\n          }else{\r\n              setConfirmEmailError(\"\");\r\n          }}}>\r\n          </input>\r\n          <span></span>\r\n          <label>Confirm e-mail</label>\r\n        </div>\r\n        <div className=\"error\">{confirmEmailError}</div> */}\r\n        <div className=\"text_field\" style={passwordError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\r\n          <input type=\"password\" required value={password} onChange={e=>{setPassword(e.target.value);}} onBlur={()=>{validatePassword();}} maxLength=\"16\">\r\n          </input>\r\n          <span></span>\r\n          <label>Password</label>\r\n        </div>\r\n        <div className=\"error\">{passwordError}</div>\r\n        <div className=\"text_field\" style={confirmPasswordError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\r\n          <input type=\"password\" required onBlur={e=>{\r\n            if(e.target.value != password){\r\n             setConfirmPasswordError(\"confirm password has to be the same as password\");\r\n          }else{\r\n            setConfirmPasswordError(\"\");\r\n          }}}>\r\n          </input>\r\n          <span></span>\r\n          <label>Confirm Password</label>\r\n        </div>\r\n        <div className=\"error\">{confirmPasswordError}</div>\r\n        <div className=\"pass\">Forgot password?</div>\r\n        <input type=\"button\" value=\"Register\" onClick={()=>{\r\n          if(validate) fetch(url + 'userAPI/register', {\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify({ name: username, password: password })\r\n          })\r\n            .then(response => response.text())\r\n            .then(response => {\r\n              if(response !== \"Username taken\") window.location = \"/dashboard\";\r\n              //alert(response);\r\n            });\r\n        }}></input>\r\n        <div className=\"signup_link\">\r\n          Already have an account? <div className=\"register_link\" onClick={()=>{setPage(\"login\")}}>Login</div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    </div>);\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}