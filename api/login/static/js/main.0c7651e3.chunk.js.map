{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Cookies","require","App","useState","page","setPage","username","setUsername","password","setPassword","email","setEmail","nameError","setNameError","passwordError","setPasswordError","emailError","setEmailError","confirmEmailError","setConfirmEmailError","confirmPasswordError","setConfirmPasswordError","validateUsername","validatePassword","length","className","method","style","type","required","value","onChange","e","target","onBlur","maxLength","onClick","fetch","headers","body","JSON","stringify","name","then","response","text","set","expires","window","location","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c7651e3.chunk.js","sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, {useState} from 'react';\n\nconst Cookies = require(\"js-cookie\");\n\nfunction App() {\n  const [page, setPage] = useState(\"login\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const [nameError, setNameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [confirmEmailError, setConfirmEmailError] = useState(\"\");\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\n\n  let validateUsername = ()=>{\n    if(username == \"\"){\n      setNameError(\"Enter username\");\n    }else{\n      setNameError(\"\");\n    }\n  }\n\n  let validateEmail = ()=>{\n    if(email == \"\" || !email.includes('@')){\n      setEmailError(\"Enter a valid email.\");\n    }else{\n      setEmailError(\"\");\n    }\n  }\n\n  let validatePassword = ()=>{\n    if(password == \"\"){\n      setPasswordError(\"Enter password\");\n    }else if(password.length < 8){\n      setPasswordError(\"Password needs to be at least 8 characters\");\n    }else{\n      setPasswordError(\"\");\n    }\n  }\n\n  let validate = ()=>{\n    validateUsername();\n    validatePassword();\n  }\n\n  if(page === 'login'){\n    return (<div className=\"body\">\n    <div className=\"center\">\n      <h1>Login</h1>\n      <form method=\"post\">\n        <div className=\"text_field\" style={nameError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\n          <input type=\"text\" required value={username} onChange={e=>{setUsername(e.target.value);}} onBlur={()=>{validateUsername();}} maxLength=\"12\">\n          </input>\n          <span></span>\n          <label>Username</label>\n        </div>\n        <div className=\"error\">{nameError}</div>\n        <div className=\"text_field\" style={passwordError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\n          <input type=\"password\" required value={password} onChange={e=>{setPassword(e.target.value);}} onBlur={()=>{validatePassword();}} maxLength=\"16\">\n          </input>\n          <span></span>\n          <label>Password</label>\n        </div>\n        <div className=\"error\">{passwordError}</div>\n        <div className=\"pass\">Forgot password?</div>\n        <input type=\"button\" value=\"Login\" onClick={()=>{\n          \n          fetch('http://localhost:9000/userAPI/login', {\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify({ name: username, password: password })\n          })\n            .then(response => response.text())\n            .then(response => {\n              Cookies.set('login', 'true', { expires: 1 });\n              if(response === \"Successfull login!\") window.location = \"/\";\n            });\n\n          if(validate()) window.location = \"/\";\n        }}></input>\n        <div className=\"signup_link\">\n          Don't have an account? <div className=\"register_link\" onClick={()=>{setPage(\"register\")}}>Register</div>\n        </div>\n      </form>\n    </div>\n    </div>\n  );\n  }else{\n    return (<div className=\"body\">\n    <div className=\"center\">\n      <h1>Register</h1>\n      <form method=\"post\">\n      <div className=\"text_field\" style={nameError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\n          <input type=\"text\" required value={username} onChange={e=>{setUsername(e.target.value);}} onBlur={()=>{validateUsername();}} maxLength=\"12\">\n          </input>\n          <span></span>\n          <label>Username</label>\n        </div>\n        <div className=\"error\">{nameError}</div>\n        <div className=\"text_field\" style={emailError != \"\" ? {\"borderBottom\":\"2px solid #ff0000\"}:{}}>\n          <input type=\"text\" required value={email} onChange={e=>{setEmail(e.target.value);}} onBlur={()=>{validateEmail();}} maxLength=\"20\">\n          </input>\n          <span></span>\n          <label>e-mail</label>\n        </div>\n        <div className=\"error\">{emailError}</div>\n        <div className=\"text_field\" style={confirmEmailError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\n          <input type=\"text\" required onBlur={e=>{\n            if(e.target.value != email){\n             setConfirmEmailError(\"confirm email has to be the same as email\");\n          }else{\n              setConfirmEmailError(\"\");\n          }}}>\n          </input>\n          <span></span>\n          <label>Confirm e-mail</label>\n        </div>\n        <div className=\"error\">{confirmEmailError}</div>\n        <div className=\"text_field\" style={passwordError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\n          <input type=\"password\" required value={password} onChange={e=>{setPassword(e.target.value);}} onBlur={()=>{validatePassword();}} maxLength=\"16\">\n          </input>\n          <span></span>\n          <label>Password</label>\n        </div>\n        <div className=\"error\">{passwordError}</div>\n        <div className=\"text_field\" style={confirmPasswordError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\n          <input type=\"password\" required onBlur={e=>{\n            if(e.target.value != password){\n             setConfirmPasswordError(\"confirm password has to be the same as password\");\n          }else{\n            setConfirmPasswordError(\"\");\n          }}}>\n          </input>\n          <span></span>\n          <label>Confirm Password</label>\n        </div>\n        <div className=\"error\">{confirmPasswordError}</div>\n        <div className=\"pass\">Forgot password?</div>\n        <input type=\"submit\" value=\"Register\"></input>\n        <div className=\"signup_link\">\n          Already have an account? <div className=\"register_link\" onClick={()=>{setPage(\"login\")}}>Login</div>\n        </div>\n      </form>\n    </div>\n    </div>);\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}