{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Cookies","require","App","useState","page","setPage","username","setUsername","password","setPassword","nameError","setNameError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","url","validateUsername","validatePassword","length","login","validate","fetch","headers","method","body","JSON","stringify","name","then","response","text","set","expires","window","location","undefined","get","style","backgroundImage","className","onMouseMove","e","target","transform","clientX","clientY","overflow","type","required","value","onChange","onBlur","maxLength","onKeyPress","key","onClick","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4f40480.chunk.js","sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, {useState} from 'react';\n\nconst Cookies = require(\"js-cookie\");\n\nfunction App() {\n  const [page, setPage] = useState(\"login\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const [nameError, setNameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [confirmEmailError, setConfirmEmailError] = useState(\"\");\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\n\n  const url = \"http://localhost:9000/\";\n\n  let validateUsername = ()=>{\n    if(username == \"\"){\n      setNameError(\"Enter username\");\n      return false;\n    }else{\n      setNameError(\"\");\n      return true;\n    }\n  }\n\n  let validateEmail = ()=>{\n    if(email == \"\" || !email.includes('@')){\n      setEmailError(\"Enter a valid email.\");\n      return false;\n    }else{\n      setEmailError(\"\");\n      return true;\n    }\n  }\n\n  let validatePassword = ()=>{\n    if(password == \"\"){\n      setPasswordError(\"Enter password\");\n      return false;\n    }else if(password.length < 8){\n      setPasswordError(\"Password needs to be at least 8 characters\");\n      return false;\n    }else{\n      setPasswordError(\"\");\n      return true;\n    }\n  }\n  let login = ()=>{\n    if(!validate()) {\n      return;\n    }\n    \n    fetch(url + 'userAPI/login', {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({ name: username, password: password })\n    })\n      .then(response => response.text())\n      .then(response => {\n        if(response === \"Successfull login!\"){\n          Cookies.set('login', username, { expires: 1 });\n\n          window.location = \"/\";\n        } else{\n          setPasswordError(response);\n        } \n      });\n  }\n  let validate = ()=>{\n    return validateUsername() || validatePassword();\n  }\n  if(Cookies.get(\"login\") != undefined){\n    return (<div>\n      You are already signed in!\n    </div>)\n  }\n  if(page === 'login'){\n    return (<><div style={{backgroundImage: \"url(/background.jpg)\"}} className=\"body\" onMouseMove={e=>{\n      e.target.style.transform = \"translate(\" + e.clientX / 100.0 + \"px, \" + e.clientY / 100.0 + \"px)\"\n      e.target.style.overflow = \"hidden\";\n    }}></div>\n    <div className=\"center\">\n      <h1>Login</h1>\n      <form method=\"post\">\n        <div className=\"text_field\" style={nameError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\n          <input type=\"text\" required value={username} onChange={e=>{setUsername(e.target.value);}} onBlur={()=>{validateUsername();}} maxLength=\"12\">\n          </input>\n          <span></span>\n          <label>Username</label>\n        </div>\n        <div className=\"error\">{nameError}</div>\n        <div className=\"text_field\" style={passwordError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\n          <input type=\"password\" onKeyPress={e=>{\n            if(e.key == 'Enter')login();\n          }}required value={password} onChange={e=>{setPassword(e.target.value);}} onBlur={()=>{validatePassword();}} maxLength=\"16\">\n          </input>\n          <span></span>\n          <label>Password</label>\n        </div>\n        <div className=\"error\">{passwordError}</div>\n        <div className=\"pass\">Forgot password?</div>\n        <input type=\"button\" value=\"Login\" onClick={()=>{\n          login();\n        }}></input>\n        <div className=\"signup_link\">\n          Don't have an account? <div className=\"register_link\" onClick={()=>{setPage(\"register\")}}>Register</div>\n        </div>\n      </form>\n    </div></>\n  );\n  }else{\n    return (<div className=\"body\">\n    <div className=\"center\">\n      <h1>Register</h1>\n      <form method=\"post\">\n      <div className=\"text_field\" style={nameError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\n          <input type=\"text\" required value={username} onChange={e=>{setUsername(e.target.value);}} onBlur={()=>{validateUsername();}} maxLength=\"12\">\n          </input>\n          <span></span>\n          <label>Username</label>\n        </div>\n        <div className=\"error\">{nameError}</div>\n        {/* <div className=\"text_field\" style={emailError != \"\" ? {\"borderBottom\":\"2px solid #ff0000\"}:{}}>\n          <input type=\"text\" required value={email} onChange={e=>{setEmail(e.target.value);}} onBlur={()=>{validateEmail();}} maxLength=\"20\">\n          </input>\n          <span></span>\n          <label>e-mail</label>\n        </div>\n        <div className=\"error\">{emailError}</div>\n        <div className=\"text_field\" style={confirmEmailError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\n          <input type=\"text\" required onBlur={e=>{\n            if(e.target.value != email){\n             setConfirmEmailError(\"confirm email has to be the same as email\");\n          }else{\n              setConfirmEmailError(\"\");\n          }}}>\n          </input>\n          <span></span>\n          <label>Confirm e-mail</label>\n        </div>\n        <div className=\"error\">{confirmEmailError}</div> */}\n        <div className=\"text_field\" style={passwordError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\n          <input type=\"password\" required value={password} onChange={e=>{setPassword(e.target.value);}} onBlur={()=>{validatePassword();}} maxLength=\"16\">\n          </input>\n          <span></span>\n          <label>Password</label>\n        </div>\n        <div className=\"error\">{passwordError}</div>\n        <div className=\"text_field\" style={confirmPasswordError != \"\" ? {\"borderBottom\": \"2px solid #ff0000\"}: {}}>\n          <input type=\"password\" required onBlur={e=>{\n            if(e.target.value != password){\n             setConfirmPasswordError(\"confirm password has to be the same as password\");\n          }else{\n            setConfirmPasswordError(\"\");\n          }}}>\n          </input>\n          <span></span>\n          <label>Confirm Password</label>\n        </div>\n        <div className=\"error\">{confirmPasswordError}</div>\n        <div className=\"pass\">Forgot password?</div>\n        <input type=\"button\" value=\"Register\" onClick={()=>{\n          fetch(url + 'userAPI/register', {\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify({ name: username, password: password })\n          })\n            .then(response => response.text())\n            .then(response => {\n              alert(response);\n            });\n        }}></input>\n        <div className=\"signup_link\">\n          Already have an account? <div className=\"register_link\" onClick={()=>{setPage(\"login\")}}>Login</div>\n        </div>\n      </form>\n    </div>\n    </div>);\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}